{"version":3,"file":"grades-legacy-DvJlgr3r.js","sources":["../../gradepad/grades.html?html-proxy&index=4.js"],"sourcesContent":["\nimport { auth } from \"./jsScripts/firebase.js\";\nimport { onAuthStateChanged } from \"https://www.gstatic.com/firebasejs/10.8.1/firebase-auth.js\";\nimport { loadCourses } from \"./jsScripts/db.js\";\nimport { createNewTable, attachEventListeners } from \"./jsScripts/tableOps.js\";\n\n\nconst semesterId = new URLSearchParams(window.location.search).get(\"semesterId\");\n\nonAuthStateChanged(auth, async (user) => {\n  if (!user || !semesterId) return;\n\n  try {\n    const courses = await loadCourses(semesterId);\n\n    if (courses.length === 0) {\n      // No saved courses ‚Üí just show blank table using existing HTML one\n      createNewTable([], true);\n    } else {\n      courses.forEach((course, index) => {\n        const { id, code, topic, units, evaluations = [] } = course;\n\n        // üß† Use the hardcoded table for the first course only\n        const table = createNewTable(evaluations, index === 0);\n\n        table.dataset.courseId = id;\n\n        const codeInput = table.querySelector(\".courseCode\");\n        const topicInput = table.querySelector(\".courseTopic\");\n        const unitsDropdown = table.querySelector(\".courseUnitsDropdown\");\n\n        if (codeInput) codeInput.value = code || \"\";\n        if (topicInput) topicInput.value = topic || \"\";\n        if (unitsDropdown) unitsDropdown.value = units?.toString() || \"0.50\";\n\n        attachEventListeners(table);\n      });\n    }\n  } catch (err) {\n    console.error(\"‚ùå Failed to load or render courses:\", err);\n  }\n});\n\n    "],"names":["semesterId","URLSearchParams","window","location","search","get","onAuthStateChanged","auth","async","user","courses","loadCourses","length","createNewTable","forEach","course","index","id","code","topic","units","evaluations","table","dataset","courseId","codeInput","querySelector","topicInput","unitsDropdown","value","toString","attachEventListeners","err","console","error"],"mappings":"yXAOA,MAAMA,EAAa,IAAIC,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,cAEnEC,EAAmBC,EAAMC,UACvB,GAAKC,GAAST,EAEd,IACE,MAAMU,QAAgBC,EAAYX,GAEX,IAAnBU,EAAQE,OAEVC,EAAe,IAAI,GAEnBH,EAAQI,QAAQ,CAACC,EAAQC,KACvB,MAAMC,GAAEA,EAAEC,KAAEA,EAAIC,MAAEA,EAAKC,MAAEA,EAAKC,YAAEA,EAAc,IAAON,EAG/CO,EAAQT,EAAeQ,EAAuB,IAAVL,GAE1CM,EAAMC,QAAQC,SAAWP,EAEzB,MAAMQ,EAAYH,EAAMI,cAAc,eAChCC,EAAaL,EAAMI,cAAc,gBACjCE,EAAgBN,EAAMI,cAAc,wBAEtCD,IAAWA,EAAUI,MAAQX,GAAQ,IACrCS,IAAYA,EAAWE,MAAQV,GAAS,IACxCS,IAAeA,EAAcC,MAAQT,GAAOU,YAAc,QAE9DC,EAAqBT,IAG3B,CAAE,MAAOU,GACPC,QAAQC,MAAM,sCAAuCF,EACvD"}